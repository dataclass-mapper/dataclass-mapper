name: Test

on: [push, pull_request, workflow_call]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python:
          - version: "3.8"
            toxenv: py38
          - version: "3.9"
            toxenv: py39
          - version: "3.10"
            toxenv: py310
          - version: "3.11"
            toxenv: py311
          - version: "3.12"
            toxenv: py312
    env:
      TOXENV: ${{ matrix.python.toxenv }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up python ${{ matrix.python.version }}
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python.version }}
          allow-prereleases: true

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          installer-parallel: true
          version: 1.2.2

      - name: Install tox
        run: |
          pip install "tox==3.25.0"

      - name: Run tox
        run: |
          tox

  coverage:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python:
          - version: "3.8"
            toxenv: py38
          - version: "3.12"
            toxenv: py312
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up python ${{ matrix.python.version }}
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python.version }}
          allow-prereleases: true

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Install dependencies
        run: poetry install --no-interaction --no-root --all-extras

      - name: Run tests and collect coverage
        run: |
          source .venv/bin/activate
          pytest --cov dataclass_mapper --cov-report xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: coverage.xml
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Install old pydantic version
        run: |
          source .venv/bin/activate
          pip install "pydantic<2.0.0"

      - name: Run tests and collect coverage
        run: |
          source .venv/bin/activate
          pytest --cov dataclass_mapper --cov-report xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: coverage.xml
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Uninstall pydantic and sqlalchemy
        run: |
          source .venv/bin/activate
          pip uninstall --yes pydantic SQLAlchemy

      - name: Run tests and collect coverage
        run: |
          source .venv/bin/activate
          pytest --cov dataclass_mapper --cov-report xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: coverage.xml
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
